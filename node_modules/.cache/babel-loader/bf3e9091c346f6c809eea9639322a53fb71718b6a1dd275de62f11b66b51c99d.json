{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/\\u1100\\u1175\\u11AFJOB\\u110B\\u1175/src/component/SearchResults.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const card = [\"청년전용창업자금(창업기반지원자금)\", \"청년내일저축계좌\", \"청년 자기개발 도서구입비 지원\", \"예비창업패키지\", \"청년키움식당\", \"(창업성공패키지 지원사업)청년창업사관학교\", 7, 8, 9, 10, 11, 12];\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n  const [search, setSearch] = useState(\"창업\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchResults,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"'\", search, \"'\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \" \\uAC80\\uC0C9 \\uACB0\\uACFC\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_box,\n      children: card.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: a\n      }, a, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"7l8Tz8Q/Ac6Z9Qu0zjjZ7go9hQw=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["styles","React","useState","jsxDEV","_jsxDEV","SearchResults","_s","cards","setCards","card","search","setSearch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","card_box","map","a","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/길JOB이/src/component/SearchResults.jsx"],"sourcesContent":["import styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\n\nfunction SearchResults() {\n  const [cards, setCards] = useState([]);\n  const card = [\n    \"청년전용창업자금(창업기반지원자금)\",\n    \"청년내일저축계좌\",\n    \"청년 자기개발 도서구입비 지원\",\n    \"예비창업패키지\",\n    \"청년키움식당\",\n    \"(창업성공패키지 지원사업)청년창업사관학교\",\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n  ];\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n  const [search, setSearch] = useState(\"창업\");\n\n  return (\n    <div className={styles.SearchResults}>\n      <h1>\n        <span>'{search}'</span> 검색 결과\n      </h1>\n      <div className={styles.card_box}>\n        {card.map((a) => (\n          <div key={a} className={styles.card}>\n            {a}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMO,IAAI,GAAG,CACX,oBAAoB,EACpB,UAAU,EACV,kBAAkB,EAClB,SAAS,EACT,QAAQ,EACR,wBAAwB,EACxB,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,EACF,EAAE,EACF,EAAE,CACH;EACD;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBACEE,OAAA;IAAKQ,SAAS,EAAEZ,MAAM,CAACK,aAAc;IAAAQ,QAAA,gBACnCT,OAAA;MAAAS,QAAA,gBACET,OAAA;QAAAS,QAAA,GAAM,GAAC,EAACH,MAAM,EAAC,GAAC;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,8BACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLb,OAAA;MAAKQ,SAAS,EAAEZ,MAAM,CAACkB,QAAS;MAAAL,QAAA,EAC7BJ,IAAI,CAACU,GAAG,CAAEC,CAAC,iBACVhB,OAAA;QAAaQ,SAAS,EAAEZ,MAAM,CAACS,IAAK;QAAAI,QAAA,EACjCO;MAAC,GADMA,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAjCQD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAmCtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}