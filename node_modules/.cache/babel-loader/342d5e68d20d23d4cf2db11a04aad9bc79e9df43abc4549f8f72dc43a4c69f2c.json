{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Welcome.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./Welcome.module.css\";\nimport logo from \"../img/gilbob-e.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Welcome() {\n  _s();\n  let navigate = useNavigate();\n\n  // 버튼에 적용할 클릭 이벤트 함수\n  const handleOnClick = () => {\n    navigate(\"/Onboarding\");\n  };\n\n  // 한국어로 저장된 localStorage의 값을 가져와서 영어로 변환하여 Swagger의 파라미터와 일치시켜야 함\n  // 변환 매핑 생성\n  const translationMap = {\n    전체: \"ALL\",\n    부산: \"BUSAN\",\n    충북: \"CHUNGBUK\",\n    충남: \"DAEGU\",\n    대구: \"DAEJEON\",\n    강원: \"GANGWON\",\n    광주: \"GWANGJU\",\n    경북: \"GYONGBUK\",\n    경남: \"GYEONGNAM\",\n    경기: \"GYOUNGGI\",\n    인천: \"INCHEON\",\n    제주: \"JEJU\",\n    전북: \"JEONBUK\",\n    전남: \"JEONNAM\",\n    세종: \"SEJONG\",\n    울산: \"ULSAN\",\n    서울: \"SEOUL\",\n    \"고등학교 졸업 미만\": \"UNDER_HIGH_SCHOOL\",\n    \"고등학교 졸업\": \"HIGH_SCHOOL_GRADUATE\",\n    \"대학교 재학\": \"COLLEGE_STUDENT\",\n    \"대학교 졸업\": \"COLLEGE_GRADUATE\",\n    \"석사/박사\": \"DOCTORATE\",\n    무관: \"ALL\",\n    \"취업 준비생\": \"JOB_SEEKER\",\n    \"(예비)창업자\": \"ENTREPRENEUR\",\n    재직자: \"EMPLOYEE\",\n    자영업자: \"SELF_EMPLOYED\",\n    프리랜서: \"FREELANCER\",\n    \"단기 근로자\": \"TEMPORARY_WORKER\"\n  };\n\n  // 맞춤 추천을 위한 API 요청 URL 생성\n  const constructApiUrl = tmpData => {\n    return `http://52.79.114.100/api/policies?age=${tmpData.age}&education=${tmpData.education}&jobStatus=${tmpData.jobStatus}&pageNumber=0&pageSize=4&residence=${tmpData.region}`;\n  };\n\n  // API 호출 함수 정의\n  const fetchPolicies = tmpData => {\n    axios.get(constructApiUrl(tmpData)).then(res => {\n      console.log(res);\n      setPolicyData(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  // 로컬 스토리지에서 사용자 정보를 가져옴\n  const getData = () => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\")); //이건 어차피 알아서 받아와지는거 굳이 상태처리할필요없음\n\n    if (userInfo) {\n      //받아왔고, 있다면?\n      const tmpData = {\n        //이렇게 하면 코드도 짧아짐! 가독성도 좋아짐\n        region: translationMap[userInfo.region],\n        education: translationMap[userInfo.education],\n        jobStatus: translationMap[userInfo.jobStatus],\n        age: parseInt(userInfo.age)\n      };\n      fetchPolicies(tmpData); //비동기 await~~해서 위에 로컬스토리지에서 받아온 객체 넣어줌\n    }\n  };\n\n  useEffect(getData, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Welcome,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.wrapper_top,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: styles.logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: styles.title,\n          children: \"\\uAE38JOB\\uC774\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.intro,\n          children: \"\\uB0B4\\uAC8C \\uD544\\uC694\\uD55C \\uCCAD\\uB144 \\uC77C\\uC790\\uB9AC \\uC815\\uCC45\\uC744 \\uD55C \\uB208\\uC5D0!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.wrapper_bottom,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.start_btn,\n          onClick: handleOnClick,\n          children: \"\\uC2DC\\uC791\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(Welcome, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Welcome;\nexport default Welcome;\nvar _c;\n$RefreshReg$(_c, \"Welcome\");","map":{"version":3,"names":["styles","logo","useNavigate","jsxDEV","_jsxDEV","Welcome","_s","navigate","handleOnClick","translationMap","전체","부산","충북","충남","대구","강원","광주","경북","경남","경기","인천","제주","전북","전남","세종","울산","서울","무관","재직자","자영업자","프리랜서","constructApiUrl","tmpData","age","education","jobStatus","region","fetchPolicies","axios","get","then","res","console","log","setPolicyData","data","catch","err","getData","userInfo","JSON","parse","localStorage","getItem","parseInt","useEffect","className","children","wrapper","wrapper_top","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","intro","wrapper_bottom","start_btn","onClick","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Welcome.jsx"],"sourcesContent":["import styles from \"./Welcome.module.css\";\nimport logo from \"../img/gilbob-e.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Welcome() {\n  let navigate = useNavigate();\n\n  // 버튼에 적용할 클릭 이벤트 함수\n  const handleOnClick = () => {\n    navigate(\"/Onboarding\");\n  };\n\n  // 한국어로 저장된 localStorage의 값을 가져와서 영어로 변환하여 Swagger의 파라미터와 일치시켜야 함\n  // 변환 매핑 생성\n  const translationMap = {\n    전체: \"ALL\",\n    부산: \"BUSAN\",\n    충북: \"CHUNGBUK\",\n    충남: \"DAEGU\",\n    대구: \"DAEJEON\",\n    강원: \"GANGWON\",\n    광주: \"GWANGJU\",\n    경북: \"GYONGBUK\",\n    경남: \"GYEONGNAM\",\n    경기: \"GYOUNGGI\",\n    인천: \"INCHEON\",\n    제주: \"JEJU\",\n    전북: \"JEONBUK\",\n    전남: \"JEONNAM\",\n    세종: \"SEJONG\",\n    울산: \"ULSAN\",\n    서울: \"SEOUL\",\n    \"고등학교 졸업 미만\": \"UNDER_HIGH_SCHOOL\",\n    \"고등학교 졸업\": \"HIGH_SCHOOL_GRADUATE\",\n    \"대학교 재학\": \"COLLEGE_STUDENT\",\n    \"대학교 졸업\": \"COLLEGE_GRADUATE\",\n    \"석사/박사\": \"DOCTORATE\",\n    무관: \"ALL\",\n    \"취업 준비생\": \"JOB_SEEKER\",\n    \"(예비)창업자\": \"ENTREPRENEUR\",\n    재직자: \"EMPLOYEE\",\n    자영업자: \"SELF_EMPLOYED\",\n    프리랜서: \"FREELANCER\",\n    \"단기 근로자\": \"TEMPORARY_WORKER\",\n  };\n\n  // 맞춤 추천을 위한 API 요청 URL 생성\n  const constructApiUrl = (tmpData) => {\n    return `http://52.79.114.100/api/policies?age=${tmpData.age}&education=${tmpData.education}&jobStatus=${tmpData.jobStatus}&pageNumber=0&pageSize=4&residence=${tmpData.region}`;\n  };\n\n  // API 호출 함수 정의\n  const fetchPolicies = (tmpData) => {\n    axios\n      .get(constructApiUrl(tmpData))\n      .then((res) => {\n        console.log(res);\n        setPolicyData(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  // 로컬 스토리지에서 사용자 정보를 가져옴\n  const getData = () => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\")); //이건 어차피 알아서 받아와지는거 굳이 상태처리할필요없음\n\n    if (userInfo) {\n      //받아왔고, 있다면?\n      const tmpData = {\n        //이렇게 하면 코드도 짧아짐! 가독성도 좋아짐\n        region: translationMap[userInfo.region],\n        education: translationMap[userInfo.education],\n        jobStatus: translationMap[userInfo.jobStatus],\n        age: parseInt(userInfo.age),\n      };\n      fetchPolicies(tmpData); //비동기 await~~해서 위에 로컬스토리지에서 받아온 객체 넣어줌\n    }\n  };\n\n  useEffect(getData, []);\n\n  return (\n    <div className={styles.Welcome}>\n      <div className={styles.wrapper}>\n        <div className={styles.wrapper_top}>\n          <img src={logo} alt=\"logo\" className={styles.logo} />\n          <h3 className={styles.title}>길JOB이</h3>\n          <p className={styles.intro}>\n            내게 필요한 청년 일자리 정책을 한 눈에!\n          </p>\n        </div>\n        <div className={styles.wrapper_bottom}>\n          <button className={styles.start_btn} onClick={handleOnClick}>\n            시작하기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Welcome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}