{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/\\u1100\\u1175\\u11AFJOB\\u110B\\u1175/src/component/SearchResults.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const card = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchResults,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"'\\uCC3D\\uC5C5' \\uAC80\\uC0C9 \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_box,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: card.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.option,\n          onClick: () => handleOptionClick(option),\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["styles","React","useState","jsxDEV","_jsxDEV","SearchResults","_s","cards","setCards","card","className","children","fileName","_jsxFileName","lineNumber","columnNumber","card_box","map","option","onClick","handleOptionClick","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/길JOB이/src/component/SearchResults.jsx"],"sourcesContent":["import styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\n\nfunction SearchResults() {\n  const [cards, setCards] = useState([]);\n  const card = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n\n  return (\n    <div className={styles.SearchResults}>\n      <h1>'창업' 검색 결과</h1>\n      <div className={styles.card_box}>\n        <div className={styles.card}>\n          {card.map((option) => (\n            <div\n              key={option}\n              className={styles.option}\n              onClick={() => handleOptionClick(option)}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMO,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EACpD;;EAEA,oBACEL,OAAA;IAAKM,SAAS,EAAEV,MAAM,CAACK,aAAc;IAAAM,QAAA,gBACnCP,OAAA;MAAAO,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBX,OAAA;MAAKM,SAAS,EAAEV,MAAM,CAACgB,QAAS;MAAAL,QAAA,eAC9BP,OAAA;QAAKM,SAAS,EAAEV,MAAM,CAACS,IAAK;QAAAE,QAAA,EACzBF,IAAI,CAACQ,GAAG,CAAEC,MAAM,iBACfd,OAAA;UAEEM,SAAS,EAAEV,MAAM,CAACkB,MAAO;UACzBC,OAAO,EAAEA,CAAA,KAAMC,iBAAiB,CAACF,MAAM,CAAE;UAAAP,QAAA,EAExCO;QAAM,GAJFA,MAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CAvBQD,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAyBtB,eAAeA,aAAa;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}