{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jw431\\\\Desktop\\\\likelion-hackathon-main\\\\src\\\\component\\\\SearchResults.jsx\",\n  _s = $RefreshSig$();\nimport logo from \"../img/logo.png\";\nimport React, { useState } from \"react\";\nimport styles from \"./SearchResults.module.css\";\nimport AutoComplete from \"../component/AutoComplete\";\nimport Footer from \"../component/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\n\n// 24자 초과할 경우 ..으로 표시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cutText(text, maxLength) {\n  if (text.length > maxLength) {\n    return text.slice(0, maxLength) + \"..\";\n  }\n  return text;\n}\nfunction SearchResults() {\n  _s();\n  const navigate = useNavigate();\n  const goToHome = () => {\n    navigate(\"/Home\");\n  };\n  const goToDetailPage = () => {\n    navigate(\"/DetailPage\");\n  };\n  const [policyData, setPolicyData] = useState({\n    content: []\n  }); //  API 응답 데이터를 관리하는 상태 추가\n  const [activePage, setActivePage] = useState(1); // 현재 선택된 페이지 번호 상태 추가\n  const itemsPerPage = 12; // 한 페이지당 보여줄 아이템 개수\n\n  // 로컬 스토리지에 있던 검색 결과 꺼내오기(문자열로 저장해서 JSON 파싱 안해도 됨)\n  const searchText = localStorage.getItem(\"searchText\");\n\n  // 검색 결과를 위한 API 요청 URL 생성\n  const constructApiUrl = () => {\n    return `http://52.79.114.100/api/policies?keyword=${searchText}&pageNumber=${activePage - 1}&pageSize=${itemsPerPage}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Home,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      onClick: goToHome,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search,\n      children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchResults,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.search_text,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"'\", searchText, \"'\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), \" \\uAC80\\uC0C9 \\uACB0\\uACFC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card_box,\n        children: card.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          onClick: goToDetailPage,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.card_text,\n            children: cutText(a, 24)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, a, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"Va0Dvn8rRNxkjXf0bqAURDBovGw=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["logo","React","useState","styles","AutoComplete","Footer","useNavigate","axios","Pagination","jsxDEV","_jsxDEV","cutText","text","maxLength","length","slice","SearchResults","_s","navigate","goToHome","goToDetailPage","policyData","setPolicyData","content","activePage","setActivePage","itemsPerPage","searchText","localStorage","getItem","constructApiUrl","className","Home","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","search","options","search_text","card_box","card","map","a","card_text","_c","$RefreshReg$"],"sources":["C:/Users/jw431/Desktop/likelion-hackathon-main/src/component/SearchResults.jsx"],"sourcesContent":["import logo from \"../img/logo.png\";\nimport React, { useState } from \"react\";\nimport styles from \"./SearchResults.module.css\";\nimport AutoComplete from \"../component/AutoComplete\";\nimport Footer from \"../component/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Pagination from \"react-js-pagination\";\n\n// 24자 초과할 경우 ..으로 표시\nfunction cutText(text, maxLength) {\n  if (text.length > maxLength) {\n    return text.slice(0, maxLength) + \"..\";\n  }\n  return text;\n}\n\nfunction SearchResults() {\n  const navigate = useNavigate();\n\n  const goToHome = () => {\n    navigate(\"/Home\");\n  };\n\n  const goToDetailPage = () => {\n    navigate(\"/DetailPage\");\n  };\n\n  const [policyData, setPolicyData] = useState({ content: [] }); //  API 응답 데이터를 관리하는 상태 추가\n  const [activePage, setActivePage] = useState(1); // 현재 선택된 페이지 번호 상태 추가\n  const itemsPerPage = 12; // 한 페이지당 보여줄 아이템 개수\n\n  // 로컬 스토리지에 있던 검색 결과 꺼내오기(문자열로 저장해서 JSON 파싱 안해도 됨)\n  const searchText = localStorage.getItem(\"searchText\");\n\n  // 검색 결과를 위한 API 요청 URL 생성\n  const constructApiUrl = () => {\n    return `http://52.79.114.100/api/policies?keyword=${searchText}&pageNumber=${\n      activePage - 1\n    }&pageSize=${itemsPerPage}`;\n  };\n\n  return (\n    <div className={styles.Home}>\n      <div className={styles.logo} onClick={goToHome}>\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className={styles.search}>\n        <AutoComplete options={options}></AutoComplete>\n      </div>\n      <div className={styles.SearchResults}>\n        <div className={styles.search_text}>\n          <h1>\n            <span>'{searchText}'</span> 검색 결과\n          </h1>\n        </div>\n        <div className={styles.card_box}>\n          {card.map((a) => (\n            <div key={a} className={styles.card} onClick={goToDetailPage}>\n              <div className={styles.card_text}>{cutText(a, 24)}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default SearchResults;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}