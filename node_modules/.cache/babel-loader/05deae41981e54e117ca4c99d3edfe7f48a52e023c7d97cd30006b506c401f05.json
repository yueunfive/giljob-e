{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/\\u1100\\u1175\\u11AFJOB\\u110B\\u1175/src/component/Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./Dropdown.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown() {\n  _s();\n  // isOpen 상태(state)를 정의하고 기본값은 false로 설정\n  const [isOpen, setIsOpen] = useState(false);\n\n  // selectedOption 상태(state)를 정의하고 기본값은 '드롭다운'으로 설정\n  const [selectedOption, setSelectedOption] = useState(\"지역을 선택해 주세요\");\n\n  // 드롭다운 박스의 옵션들을 배열로 정의\n  const options = [\"전체\", \"서울\", \"경기\"];\n\n  // 드롭다운 버튼을 클릭했을 때 호출되는 함수\n  const handleDropdownClick = () => {\n    // isOpen 상태를 토글하여 드롭다운 내용을 보이거나 숨김\n    setIsOpen(!isOpen);\n  };\n\n  // 드롭다운 내용의 각 옵션을 클릭했을 때 호출되는 함수\n  const handleOptionClick = option => {\n    // 선택된 옵션을 selectedOption 상태로 설정\n    setSelectedOption(option);\n    // 드롭다운 내용을 숨김\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drop-btn\",\n      onClick: handleDropdownClick,\n      children: selectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: options.map((option, index) =>\n      /*#__PURE__*/\n      // 각 옵션을 클릭했을 때 handleOptionClick 함수 호출\n      _jsxDEV(\"div\", {\n        className: \"option\",\n        onClick: () => handleOptionClick(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"+fe0RyqqOf8bVnNOtVewPUcyyqk=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Dropdown","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","options","handleDropdownClick","handleOptionClick","option","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/길JOB이/src/component/Dropdown.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./Dropdown.module.css\";\n\nfunction Dropdown() {\n  // isOpen 상태(state)를 정의하고 기본값은 false로 설정\n  const [isOpen, setIsOpen] = useState(false);\n\n  // selectedOption 상태(state)를 정의하고 기본값은 '드롭다운'으로 설정\n  const [selectedOption, setSelectedOption] = useState(\"지역을 선택해 주세요\");\n\n  // 드롭다운 박스의 옵션들을 배열로 정의\n  const options = [\"전체\", \"서울\", \"경기\"];\n\n  // 드롭다운 버튼을 클릭했을 때 호출되는 함수\n  const handleDropdownClick = () => {\n    // isOpen 상태를 토글하여 드롭다운 내용을 보이거나 숨김\n    setIsOpen(!isOpen);\n  };\n\n  // 드롭다운 내용의 각 옵션을 클릭했을 때 호출되는 함수\n  const handleOptionClick = (option) => {\n    // 선택된 옵션을 selectedOption 상태로 설정\n    setSelectedOption(option);\n    // 드롭다운 내용을 숨김\n    setIsOpen(false);\n  };\n\n  return (\n    <div className=\"dropdown-container\">\n      {/* 드롭다운 버튼 */}\n      <button className=\"drop-btn\" onClick={handleDropdownClick}>\n        {/* 선택된 옵션 표시 */}\n        {selectedOption}\n      </button>\n      {/* isOpen이 true일 때만 드롭다운 내용 보여줌 */}\n      {isOpen && (\n        <div className=\"dropdown-content\">\n          {/* 옵션들 매핑 */}\n          {options.map((option, index) => (\n            // 각 옵션을 클릭했을 때 handleOptionClick 함수 호출\n            <div\n              key={index}\n              className=\"option\"\n              onClick={() => handleOptionClick(option)}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAE3C;EACA,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,aAAa,CAAC;;EAEnE;EACA,MAAMU,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;;EAElC;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAJ,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,MAAMM,iBAAiB,GAAIC,MAAM,IAAK;IACpC;IACAJ,iBAAiB,CAACI,MAAM,CAAC;IACzB;IACAN,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEJ,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjCZ,OAAA;MAAQW,SAAS,EAAC,UAAU;MAACE,OAAO,EAAEL,mBAAoB;MAAAI,QAAA,EAEvDP;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EAERd,MAAM,iBACLH,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE9BL,OAAO,CAACW,GAAG,CAAC,CAACR,MAAM,EAAES,KAAK;MAAA;MACzB;MACAnB,OAAA;QAEEW,SAAS,EAAC,QAAQ;QAClBE,OAAO,EAAEA,CAAA,KAAMJ,iBAAiB,CAACC,MAAM,CAAE;QAAAE,QAAA,EAExCF;MAAM,GAJFS,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAjDQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}