{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jw431\\\\Desktop\\\\likelion-hackathon-main\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport logo from \"../img/logo.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./Home.module.css\";\nimport ModalContent from \"../component/ModalContent\";\nimport AutoComplete from \"../component/AutoComplete\";\nimport Footer from \"../component/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [options, setOptions] = useState([]);\n  const [rankData, setRankData] = useState([]);\n  const [policyData, setPolicyData] = useState({\n    content: []\n  }); //  API 응답 데이터를 관리하는 상태 추가\n\n  useEffect(() => {\n    // 컴포넌트가 마운트되었을 때 주요 콘텐츠 엘리먼트를 정의\n    Modal.setAppElement(\"#root\");\n  }, []);\n  const navigate = useNavigate();\n  const [searchZIndex, setSearchZIndex] = useState(1); // 모달창을 열고 닫을때 검색창의 z-index를 조절(안하면 모달창 열어도 검색창 뜸)\n\n  useEffect(() => {\n    // API 요청\n    const apiUrl = \"http://54.180.36.240/api/policies/rank?pageSize=5\";\n    axios.get(apiUrl).then(response => {\n      // API에서 받아온 데이터 중에서 이름(name) 정보와 bizid를 추출하여 rankData에 설정\n      const newRankData = response.data.map(item => ({\n        name: item.name,\n        bizId: item.bizId\n      }));\n      setRankData(newRankData);\n    }).catch(error => {\n      console.error(\"Error fetching rank data:\", error);\n    });\n  }, []); // 빈 배열을 넣어 한 번만 호출되도록 설정\n\n  useEffect(() => {\n    const apiUrl = \"http://54.180.36.240/api/policies?pageSize=10\";\n    const params = {\n      age: null,\n      education: null,\n      jobStatus: null,\n      keyword: null,\n      pageNumber: null,\n      pageSize: null,\n      residence: null\n    };\n    axios.get(apiUrl, {\n      params\n    }).then(response => {\n      const newOptions = response.data.content.map(item => item.name);\n      setOptions(newOptions);\n    }).catch(error => {\n      console.error(\"Error fetching data from API:\", error);\n    });\n  }, []);\n\n  // 모달 열릴 때 z-index 값을 변경\n  const openModal = () => {\n    setSearchZIndex(0);\n  };\n\n  // 모달 닫힐 때 z-index 값을 원래대로 변경\n  const closeModal = () => {\n    setSearchZIndex(1);\n  };\n  const goToHome = () => {\n    navigate(\"/Home\");\n  };\n\n  // 정책 상세 페이지로 이동\n  const goToDetailPage = bizId => {\n    // 해당 정책의 bizid를 사용하여 DetailPage로 이동\n    navigate(`/DetailPage/${bizId}`);\n  };\n\n  // 24자 초과할 경우 ..으로 표시\n  function cutText(text, maxLength) {\n    if (text.length > maxLength) {\n      return text.slice(0, maxLength) + \"..\";\n    }\n    return text;\n  }\n\n  // 한국어로 저장된 localStorage의 값을 가져와서 영어로 변환하여 Swagger의 파라미터와 일치시켜야 함\n  // 변환 매핑 생성\n  const translationMap = {\n    전체: \"ALL\",\n    부산: \"BUSAN\",\n    충북: \"CHUNGBUK\",\n    충남: \"DAEGU\",\n    대구: \"DAEJEON\",\n    강원: \"GANGWON\",\n    광주: \"GWANGJU\",\n    경북: \"GYONGBUK\",\n    경남: \"GYEONGNAM\",\n    경기: \"GYOUNGGI\",\n    인천: \"INCHEON\",\n    제주: \"JEJU\",\n    전북: \"JEONBUK\",\n    전남: \"JEONNAM\",\n    세종: \"SEJONG\",\n    울산: \"ULSAN\",\n    서울: \"SEOUL\",\n    \"고등학교 졸업 미만\": \"UNDER_HIGH_SCHOOL\",\n    \"고등학교 졸업\": \"HIGH_SCHOOL_GRADUATE\",\n    \"대학교 재학\": \"COLLEGE_STUDENT\",\n    \"대학교 졸업\": \"COLLEGE_GRADUATE\",\n    \"석사/박사\": \"DOCTORATE\",\n    무관: \"ALL\",\n    \"취업 준비생\": \"JOB_SEEKER\",\n    \"(예비)창업자\": \"ENTREPRENEUR\",\n    재직자: \"EMPLOYEE\",\n    자영업자: \"SELF_EMPLOYED\",\n    프리랜서: \"FREELANCER\",\n    \"단기 근로자\": \"TEMPORARY_WORKER\"\n  };\n\n  // 로컬 스토리지에서 사용자 정보를 가져옴\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  const [translatedData, setTranslatedData] = useState({\n    region: \"\",\n    education: \"\",\n    jobStatus: \"\",\n    age: 0\n  });\n\n  // 로컬 스토리지에서 가져온 값을 초기에 translatedData로 설정\n  useEffect(() => {\n    if (userInfo) {\n      const translatedRegion = translationMap[userInfo.region];\n      const translatedEducation = translationMap[userInfo.education];\n      const translatedJobStatus = translationMap[userInfo.jobStatus];\n      const userAge = parseInt(userInfo.age);\n      setTranslatedData({\n        region: translatedRegion,\n        education: translatedEducation,\n        jobStatus: translatedJobStatus,\n        age: userAge\n      });\n    }\n  }, [userInfo]);\n\n  // 맞춤 추천을 위한 API 요청 URL 생성\n  const constructApiUrl = () => {\n    return `http://54.180.36.240/api/policies?age=${translatedData.age}&education=${translatedData.education}&jobStatus=${translatedData.jobStatus}&pageNumber=0&pageSize=4&residence=${translatedData.region}`;\n  };\n\n  // API 호출 함수 정의\n  const fetchPolicies = async () => {\n    try {\n      const response = await axios.get(constructApiUrl()); // API 요청\n\n      setPolicyData(response.data); // policyData 업데이트\n    } catch (error) {\n      console.error(\"Error fetching policies:\", error);\n      console.log(\"Translated Data:\", translatedData); // 콘솔창에 띄어 보니까 데이터는 잘 들어갔고 요청 URL도 맞는데 왜ㅜ\n      console.log(constructApiUrl());\n    }\n  };\n\n  // translatedData가 변경될 때에만 API를 호출\n  useEffect(() => {\n    if (userInfo) {\n      fetchPolicies(); // API 호출\n    }\n  }, [translatedData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Home,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.logo,\n      onClick: goToHome,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search,\n      style: {\n        zIndex: searchZIndex\n      },\n      children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.recommend,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.recotitle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uB9DE\\uCDA4 \\uC77C\\uC790\\uB9AC \\uC815\\uCC45 \\uCD94\\uCC9C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          openModal: openModal,\n          closeModal: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card_box,\n        children: policyData.content.map((policy, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card,\n          onClick: () => goToDetailPage(policy.bizId),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.card_text,\n            children: cutText(policy.name, 24)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rank,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.ranktitle,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC2E4\\uC2DC\\uAC04 \\uCCAD\\uB144 \\uC77C\\uC790\\uB9AC \\uC815\\uCC45 \\uC21C\\uC704\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.ranklist,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: rankData.map((policy, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.ranknum,\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.jobtitle,\n              onClick: () => goToDetailPage(policy.bizId),\n              children: policy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"4lodoHI/ORR3Y92rLma8MdbMaMw=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["logo","React","useState","useEffect","axios","styles","ModalContent","AutoComplete","Footer","useNavigate","Modal","jsxDEV","_jsxDEV","Home","_s","options","setOptions","rankData","setRankData","policyData","setPolicyData","content","setAppElement","navigate","searchZIndex","setSearchZIndex","apiUrl","get","then","response","newRankData","data","map","item","name","bizId","catch","error","console","params","age","education","jobStatus","keyword","pageNumber","pageSize","residence","newOptions","openModal","closeModal","goToHome","goToDetailPage","cutText","text","maxLength","length","slice","translationMap","전체","부산","충북","충남","대구","강원","광주","경북","경남","경기","인천","제주","전북","전남","세종","울산","서울","무관","재직자","자영업자","프리랜서","userInfo","JSON","parse","localStorage","getItem","translatedData","setTranslatedData","region","translatedRegion","translatedEducation","translatedJobStatus","userAge","parseInt","constructApiUrl","fetchPolicies","log","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","search","style","zIndex","recommend","recotitle","card_box","policy","index","card","card_text","rank","ranktitle","ranklist","ranknum","jobtitle","_c","$RefreshReg$"],"sources":["C:/Users/jw431/Desktop/likelion-hackathon-main/src/pages/Home.jsx"],"sourcesContent":["import logo from \"../img/logo.png\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./Home.module.css\";\nimport ModalContent from \"../component/ModalContent\";\nimport AutoComplete from \"../component/AutoComplete\";\nimport Footer from \"../component/Footer\";\nimport { useNavigate } from \"react-router-dom\";\nimport Modal from \"react-modal\";\n\nconst Home = () => {\n  const [options, setOptions] = useState([]);\n  const [rankData, setRankData] = useState([]);\n  const [policyData, setPolicyData] = useState({ content: [] }); //  API 응답 데이터를 관리하는 상태 추가\n\n  useEffect(() => {\n    // 컴포넌트가 마운트되었을 때 주요 콘텐츠 엘리먼트를 정의\n    Modal.setAppElement(\"#root\");\n  }, []);\n\n  const navigate = useNavigate();\n\n  const [searchZIndex, setSearchZIndex] = useState(1); // 모달창을 열고 닫을때 검색창의 z-index를 조절(안하면 모달창 열어도 검색창 뜸)\n\n  useEffect(() => {\n    // API 요청\n    const apiUrl = \"http://54.180.36.240/api/policies/rank?pageSize=5\";\n\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        // API에서 받아온 데이터 중에서 이름(name) 정보와 bizid를 추출하여 rankData에 설정\n        const newRankData = response.data.map((item) => ({\n          name: item.name,\n          bizId: item.bizId,\n        }));\n        setRankData(newRankData);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching rank data:\", error);\n      });\n  }, []); // 빈 배열을 넣어 한 번만 호출되도록 설정\n\n  useEffect(() => {\n    const apiUrl = \"http://54.180.36.240/api/policies?pageSize=10\";\n    const params = {\n      age: null,\n      education: null,\n      jobStatus: null,\n      keyword: null,\n      pageNumber: null,\n      pageSize: null,\n      residence: null,\n    };\n\n    axios\n      .get(apiUrl, { params })\n      .then((response) => {\n        const newOptions = response.data.content.map((item) => item.name);\n        setOptions(newOptions);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from API:\", error);\n      });\n  }, []);\n\n  // 모달 열릴 때 z-index 값을 변경\n  const openModal = () => {\n    setSearchZIndex(0);\n  };\n\n  // 모달 닫힐 때 z-index 값을 원래대로 변경\n  const closeModal = () => {\n    setSearchZIndex(1);\n  };\n\n  const goToHome = () => {\n    navigate(\"/Home\");\n  };\n\n  // 정책 상세 페이지로 이동\n  const goToDetailPage = (bizId) => {\n    // 해당 정책의 bizid를 사용하여 DetailPage로 이동\n    navigate(`/DetailPage/${bizId}`);\n  };\n\n  // 24자 초과할 경우 ..으로 표시\n  function cutText(text, maxLength) {\n    if (text.length > maxLength) {\n      return text.slice(0, maxLength) + \"..\";\n    }\n    return text;\n  }\n\n  // 한국어로 저장된 localStorage의 값을 가져와서 영어로 변환하여 Swagger의 파라미터와 일치시켜야 함\n  // 변환 매핑 생성\n  const translationMap = {\n    전체: \"ALL\",\n    부산: \"BUSAN\",\n    충북: \"CHUNGBUK\",\n    충남: \"DAEGU\",\n    대구: \"DAEJEON\",\n    강원: \"GANGWON\",\n    광주: \"GWANGJU\",\n    경북: \"GYONGBUK\",\n    경남: \"GYEONGNAM\",\n    경기: \"GYOUNGGI\",\n    인천: \"INCHEON\",\n    제주: \"JEJU\",\n    전북: \"JEONBUK\",\n    전남: \"JEONNAM\",\n    세종: \"SEJONG\",\n    울산: \"ULSAN\",\n    서울: \"SEOUL\",\n    \"고등학교 졸업 미만\": \"UNDER_HIGH_SCHOOL\",\n    \"고등학교 졸업\": \"HIGH_SCHOOL_GRADUATE\",\n    \"대학교 재학\": \"COLLEGE_STUDENT\",\n    \"대학교 졸업\": \"COLLEGE_GRADUATE\",\n    \"석사/박사\": \"DOCTORATE\",\n    무관: \"ALL\",\n    \"취업 준비생\": \"JOB_SEEKER\",\n    \"(예비)창업자\": \"ENTREPRENEUR\",\n    재직자: \"EMPLOYEE\",\n    자영업자: \"SELF_EMPLOYED\",\n    프리랜서: \"FREELANCER\",\n    \"단기 근로자\": \"TEMPORARY_WORKER\",\n  };\n\n  // 로컬 스토리지에서 사용자 정보를 가져옴\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  const [translatedData, setTranslatedData] = useState({\n    region: \"\",\n    education: \"\",\n    jobStatus: \"\",\n    age: 0,\n  });\n\n  // 로컬 스토리지에서 가져온 값을 초기에 translatedData로 설정\n  useEffect(() => {\n    if (userInfo) {\n      const translatedRegion = translationMap[userInfo.region];\n      const translatedEducation = translationMap[userInfo.education];\n      const translatedJobStatus = translationMap[userInfo.jobStatus];\n      const userAge = parseInt(userInfo.age);\n\n      setTranslatedData({\n        region: translatedRegion,\n        education: translatedEducation,\n        jobStatus: translatedJobStatus,\n        age: userAge,\n      });\n    }\n  }, [userInfo]);\n\n  // 맞춤 추천을 위한 API 요청 URL 생성\n  const constructApiUrl = () => {\n    return `http://54.180.36.240/api/policies?age=${translatedData.age}&education=${translatedData.education}&jobStatus=${translatedData.jobStatus}&pageNumber=0&pageSize=4&residence=${translatedData.region}`;\n  };\n\n  // API 호출 함수 정의\n  const fetchPolicies = async () => {\n    try {\n      const response = await axios.get(constructApiUrl()); // API 요청\n\n      setPolicyData(response.data); // policyData 업데이트\n    } catch (error) {\n      console.error(\"Error fetching policies:\", error);\n      console.log(\"Translated Data:\", translatedData); // 콘솔창에 띄어 보니까 데이터는 잘 들어갔고 요청 URL도 맞는데 왜ㅜ\n      console.log(constructApiUrl());\n    }\n  };\n\n  // translatedData가 변경될 때에만 API를 호출\n  useEffect(() => {\n    if (userInfo) {\n      fetchPolicies(); // API 호출\n    }\n  }, [translatedData]);\n\n  return (\n    <div className={styles.Home}>\n      <div className={styles.logo} onClick={goToHome}>\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className={styles.search} style={{ zIndex: searchZIndex }}>\n        <AutoComplete options={options}></AutoComplete>\n      </div>\n      <div className={styles.recommend}>\n        <div className={styles.recotitle}>\n          <span>맞춤 일자리 정책 추천</span>\n          <ModalContent openModal={openModal} closeModal={closeModal} />\n        </div>\n        {/* 배열 매핑으로 맞춤 추천 최종 구현!*/}\n        <div className={styles.card_box}>\n          {policyData.content.map((policy, index) => (\n            <div\n              className={styles.card}\n              onClick={() => goToDetailPage(policy.bizId)}\n              key={index}\n            >\n              <div className={styles.card_text}>{cutText(policy.name, 24)}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className={styles.rank}>\n        <div className={styles.ranktitle}>\n          <span>실시간 청년 일자리 정책 순위</span>\n        </div>\n        <div className={styles.ranklist}>\n          <ul>\n            {/* rankData를 이용하여 정책 순위 리스트 생성 */}\n            {rankData.map((policy, index) => (\n              <li key={index}>\n                <span className={styles.ranknum}>{index + 1}</span>\n                {/* 정책 이름 버튼을 클릭할 때 해당 정책의 bizid를 전달 */}\n                <button\n                  className={styles.jobtitle}\n                  onClick={() => goToDetailPage(policy.bizId)}\n                >\n                  {policy.name}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}