{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/\\u1100\\u1175\\u11AFJOB\\u110B\\u1175/src/component/Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./Dropdown.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown({\n  options,\n  defaultOption\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\n  const dropdownRef = useRef(null); // Ref 객체를 생성하여 드롭다운 컨테이너를 참조\n\n  // 드롭다운 컨테이너 외부를 클릭하면 드롭다운 내용을 닫을 수 있게 하는 기능\n  useEffect(() => {\n    const handleOutsideClick = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick);\n    };\n  }, []);\n\n  // 드롭다운 버튼을 클릭했을 때 isOpen 상태를 토글하여 드롭다운 내용을 보이거나 숨김\n  const handleDropdownClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // 드롭다운 내용에서 옵션을 클릭했을 때 호출되는 함수\n  const handleOptionClick = event => {\n    const clickedOption = event.target.textContent;\n    setSelectedOption(clickedOption);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dropdown_container,\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${styles.drop_btn} ${isOpen ? styles.opened : \"\"}`,\n      onClick: e => {\n        e.stopPropagation(); // 이벤트 전파 막음\n        handleDropdownClick();\n      },\n      children: selectedOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdown_content,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.option,\n        onClick: e => {\n          e.stopPropagation(); // 이벤트 전파 막음\n          handleOptionClick(option);\n        },\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Dropdown, \"LmC8G/KnpETh006GmLfCwtUOAWY=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","jsxDEV","_jsxDEV","Dropdown","options","defaultOption","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","dropdownRef","handleOutsideClick","event","current","contains","target","document","addEventListener","removeEventListener","handleDropdownClick","handleOptionClick","clickedOption","textContent","className","dropdown_container","ref","children","drop_btn","opened","onClick","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","dropdown_content","map","option","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/길JOB이/src/component/Dropdown.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styles from \"./Dropdown.module.css\";\n\nfunction Dropdown({ options, defaultOption }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(defaultOption);\n  const dropdownRef = useRef(null); // Ref 객체를 생성하여 드롭다운 컨테이너를 참조\n\n  // 드롭다운 컨테이너 외부를 클릭하면 드롭다운 내용을 닫을 수 있게 하는 기능\n  useEffect(() => {\n    const handleOutsideClick = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"click\", handleOutsideClick);\n    };\n  }, []);\n\n  // 드롭다운 버튼을 클릭했을 때 isOpen 상태를 토글하여 드롭다운 내용을 보이거나 숨김\n  const handleDropdownClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  // 드롭다운 내용에서 옵션을 클릭했을 때 호출되는 함수\n  const handleOptionClick = (event) => {\n    const clickedOption = event.target.textContent;\n    setSelectedOption(clickedOption);\n    setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.dropdown_container} ref={dropdownRef}>\n      <button\n        className={`${styles.drop_btn} ${isOpen ? styles.opened : \"\"}`}\n        onClick={(e) => {\n          e.stopPropagation(); // 이벤트 전파 막음\n          handleDropdownClick();\n        }}\n      >\n        {selectedOption}\n      </button>\n      {isOpen && (\n        <div className={styles.dropdown_content}>\n          {options.map((option) => (\n            <div\n              key={option}\n              className={styles.option}\n              onClick={(e) => {\n                e.stopPropagation(); // 이벤트 전파 막음\n                handleOptionClick(option);\n              }}\n            >\n              {option}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Dropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAC;EAAEC,OAAO;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAACQ,aAAa,CAAC;EACnE,MAAMM,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAIF,WAAW,CAACG,OAAO,IAAI,CAACH,WAAW,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACtER,SAAS,CAAC,KAAK,CAAC;MAClB;IACF,CAAC;IACDS,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEN,kBAAkB,CAAC;IACtD,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEP,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChCZ,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAIR,KAAK,IAAK;IACnC,MAAMS,aAAa,GAAGT,KAAK,CAACG,MAAM,CAACO,WAAW;IAC9Cb,iBAAiB,CAACY,aAAa,CAAC;IAChCd,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAKsB,SAAS,EAAExB,MAAM,CAACyB,kBAAmB;IAACC,GAAG,EAAEf,WAAY;IAAAgB,QAAA,gBAC1DzB,OAAA;MACEsB,SAAS,EAAG,GAAExB,MAAM,CAAC4B,QAAS,IAAGrB,MAAM,GAAGP,MAAM,CAAC6B,MAAM,GAAG,EAAG,EAAE;MAC/DC,OAAO,EAAGC,CAAC,IAAK;QACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;QACrBZ,mBAAmB,CAAC,CAAC;MACvB,CAAE;MAAAO,QAAA,EAEDlB;IAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EACR7B,MAAM,iBACLL,OAAA;MAAKsB,SAAS,EAAExB,MAAM,CAACqC,gBAAiB;MAAAV,QAAA,EACrCvB,OAAO,CAACkC,GAAG,CAAEC,MAAM,iBAClBrC,OAAA;QAEEsB,SAAS,EAAExB,MAAM,CAACuC,MAAO;QACzBT,OAAO,EAAGC,CAAC,IAAK;UACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;UACrBX,iBAAiB,CAACkB,MAAM,CAAC;QAC3B,CAAE;QAAAZ,QAAA,EAEDY;MAAM,GAPFA,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC9B,EAAA,CA3DQH,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}