{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jw431\\\\Desktop\\\\likelion-hackathon-main\\\\src\\\\component\\\\AutoComplete.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport search from \"../img/search.png\";\nimport styles from \"./AutoComplete.module.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AutoComplete = () => {\n  _s();\n  let navigate = useNavigate();\n  const inputRef = useRef(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [options, setOptions] = useState([]);\n  const handleChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n    const filtered = value ? options.filter(option => option.toLowerCase().includes(value.toLowerCase())) : [];\n    setFilteredOptions(filtered);\n  };\n  const handleSelectOption = option => {\n    setInputValue(option);\n    setFilteredOptions([]);\n    inputRef.current.focus();\n  };\n  const handleBlur = () => {\n    setTimeout(() => {\n      setFilteredOptions([]);\n    }, 200);\n  };\n  const goToSearchResults = () => {\n    if (inputValue.length > 0) {\n      navigate(\"/SearchResults\");\n      window.location.href = \"/SearchResults\"; // SearchResults 페이지로 이동할 때 새로고침(이렇게 해야 Home에서 SearchResult로 갈 때 바로 결과값 뜸)\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      e.preventDefault(); // 기본 엔터 키 동작 막기\n      goToSearchResults();\n      handleSearch();\n      setFilteredOptions([]);\n    }\n  };\n  const handleSearch = () => {\n    localStorage.setItem(\"searchText\", inputValue);\n  };\n\n  // 입력값과 겹치는 부분을 강조하여 표시하는 함수\n  const highlightMatchingText = text => {\n    const index = text.toLowerCase().indexOf(inputValue.toLowerCase());\n    if (index === -1) {\n      return text;\n    }\n    const before = text.substring(0, index);\n    const match = text.substring(index, index + inputValue.length);\n    const after = text.substring(index + inputValue.length);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [before, /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: styles.highlight,\n        children: match\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), after]\n    }, void 0, true);\n  };\n  useEffect(() => {\n    const defaultURL = \"https://www.giljob-e.shop/api/policies\";\n    const params = {\n      age: null,\n      education: null,\n      jobStatus: null,\n      keyword: null,\n      pageNumber: null,\n      pageSize: null,\n      residence: null\n    };\n    axios.get(defaultURL).then(response => {\n      const totalElements = response.data.totalElements;\n      const apiUrl = `https://www.giljob-e.shop/api/policies?pageSize=${totalElements}`;\n      console.log(apiUrl);\n      axios.get(apiUrl, {\n        params\n      }).then(secondResponse => {\n        const newOptions = secondResponse.data.content.map(item => item.name);\n        setOptions(newOptions);\n      }).catch(error => {\n        console.error(\"Error fetching data from API:\", error);\n      });\n    }).catch(error => {\n      console.error(\"Error fetching data from API:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dropdown,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchbox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        value: inputValue,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        onFocus: () => setFilteredOptions(filteredOptions.length > 0),\n        onKeyDown: handleKeyDown,\n        placeholder: \"\\uAD81\\uAE08\\uD55C \\uC77C\\uC790\\uB9AC \\uC815\\uCC45\\uC744 \\uCC3E\\uC544\\uBCF4\\uC138\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.search_btn,\n        onClick: () => {\n          goToSearchResults();\n          handleSearch();\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: search,\n          className: styles.searchicon,\n          alt: \"searchicon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), filteredOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.dropdownbox,\n      children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSelectOption(option),\n        className: styles.dropdowntext,\n        children: highlightMatchingText(option)\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(AutoComplete, \"J6noo8i5oVC3odD/H0w/Qfo2GZ8=\", false, function () {\n  return [useNavigate];\n});\n_c = AutoComplete;\nexport default AutoComplete;\nvar _c;\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"names":["React","useState","useRef","useEffect","search","styles","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AutoComplete","_s","navigate","inputRef","inputValue","setInputValue","filteredOptions","setFilteredOptions","options","setOptions","handleChange","e","value","target","filtered","filter","option","toLowerCase","includes","handleSelectOption","current","focus","handleBlur","setTimeout","goToSearchResults","length","window","location","href","handleKeyDown","key","preventDefault","handleSearch","localStorage","setItem","highlightMatchingText","text","index","indexOf","before","substring","match","after","children","className","highlight","fileName","_jsxFileName","lineNumber","columnNumber","defaultURL","params","age","education","jobStatus","keyword","pageNumber","pageSize","residence","get","then","response","totalElements","data","apiUrl","console","log","secondResponse","newOptions","content","map","item","name","catch","error","dropdown","searchbox","type","ref","onChange","onBlur","onFocus","onKeyDown","placeholder","search_btn","onClick","src","searchicon","alt","dropdownbox","dropdowntext","_c","$RefreshReg$"],"sources":["C:/Users/jw431/Desktop/likelion-hackathon-main/src/component/AutoComplete.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport search from \"../img/search.png\";\r\nimport styles from \"./AutoComplete.module.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoComplete = () => {\r\n  let navigate = useNavigate();\r\n  const inputRef = useRef(null);\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [filteredOptions, setFilteredOptions] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setInputValue(value);\r\n\r\n    const filtered = value\r\n      ? options.filter((option) =>\r\n          option.toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      : [];\r\n    setFilteredOptions(filtered);\r\n  };\r\n\r\n  const handleSelectOption = (option) => {\r\n    setInputValue(option);\r\n    setFilteredOptions([]);\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setTimeout(() => {\r\n      setFilteredOptions([]);\r\n    }, 200);\r\n  };\r\n\r\n  const goToSearchResults = () => {\r\n    if (inputValue.length > 0) {\r\n      navigate(\"/SearchResults\");\r\n      window.location.href = \"/SearchResults\"; // SearchResults 페이지로 이동할 때 새로고침(이렇게 해야 Home에서 SearchResult로 갈 때 바로 결과값 뜸)\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault(); // 기본 엔터 키 동작 막기\r\n      goToSearchResults();\r\n      handleSearch();\r\n      setFilteredOptions([]);\r\n    }\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    localStorage.setItem(\"searchText\", inputValue);\r\n  };\r\n\r\n  // 입력값과 겹치는 부분을 강조하여 표시하는 함수\r\n  const highlightMatchingText = (text) => {\r\n    const index = text.toLowerCase().indexOf(inputValue.toLowerCase());\r\n    if (index === -1) {\r\n      return text;\r\n    }\r\n\r\n    const before = text.substring(0, index);\r\n    const match = text.substring(index, index + inputValue.length);\r\n    const after = text.substring(index + inputValue.length);\r\n\r\n    return (\r\n      <>\r\n        {before}\r\n        <strong className={styles.highlight}>{match}</strong>\r\n        {after}\r\n      </>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const defaultURL = \"https://www.giljob-e.shop/api/policies\";\r\n    const params = {\r\n      age: null,\r\n      education: null,\r\n      jobStatus: null,\r\n      keyword: null,\r\n      pageNumber: null,\r\n      pageSize: null,\r\n      residence: null,\r\n    };\r\n    axios\r\n      .get(defaultURL)\r\n      .then((response) => {\r\n        const totalElements = response.data.totalElements;\r\n        const apiUrl = `https://www.giljob-e.shop/api/policies?pageSize=${totalElements}`;\r\n        console.log(apiUrl);\r\n        axios\r\n          .get(apiUrl, { params })\r\n          .then((secondResponse) => {\r\n            const newOptions = secondResponse.data.content.map(\r\n              (item) => item.name\r\n            );\r\n            setOptions(newOptions);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching data from API:\", error);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data from API:\", error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.dropdown}>\r\n      <div className={styles.searchbox}>\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          value={inputValue}\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          onFocus={() => setFilteredOptions(filteredOptions.length > 0)}\r\n          onKeyDown={handleKeyDown}\r\n          placeholder=\"궁금한 일자리 정책을 찾아보세요!\"\r\n        />\r\n        <button\r\n          className={styles.search_btn}\r\n          onClick={() => {\r\n            goToSearchResults();\r\n            handleSearch();\r\n          }}\r\n        >\r\n          <img src={search} className={styles.searchicon} alt=\"searchicon\" />\r\n        </button>\r\n      </div>\r\n      {filteredOptions.length > 0 && (\r\n        <ul className={styles.dropdownbox}>\r\n          {filteredOptions.map((option) => (\r\n            <li\r\n              key={option}\r\n              onClick={() => handleSelectOption(option)}\r\n              className={styles.dropdowntext}\r\n            >\r\n              {highlightMatchingText(option)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AutoComplete;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,IAAIC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC5B,MAAMS,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK;IAC5BP,aAAa,CAACO,KAAK,CAAC;IAEpB,MAAME,QAAQ,GAAGF,KAAK,GAClBJ,OAAO,CAACO,MAAM,CAAEC,MAAM,IACpBA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CACnD,CAAC,GACD,EAAE;IACNV,kBAAkB,CAACO,QAAQ,CAAC;EAC9B,CAAC;EAED,MAAMK,kBAAkB,GAAIH,MAAM,IAAK;IACrCX,aAAa,CAACW,MAAM,CAAC;IACrBT,kBAAkB,CAAC,EAAE,CAAC;IACtBJ,QAAQ,CAACiB,OAAO,CAACC,KAAK,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBC,UAAU,CAAC,MAAM;MACfhB,kBAAkB,CAAC,EAAE,CAAC;IACxB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIpB,UAAU,CAACqB,MAAM,GAAG,CAAC,EAAE;MACzBvB,QAAQ,CAAC,gBAAgB,CAAC;MAC1BwB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,gBAAgB,CAAC,CAAC;IAC3C;EACF,CAAC;;EAED,MAAMC,aAAa,GAAIlB,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACmB,GAAG,KAAK,OAAO,EAAE;MACrBnB,CAAC,CAACoB,cAAc,CAAC,CAAC,CAAC,CAAC;MACpBP,iBAAiB,CAAC,CAAC;MACnBQ,YAAY,CAAC,CAAC;MACdzB,kBAAkB,CAAC,EAAE,CAAC;IACxB;EACF,CAAC;EAED,MAAMyB,YAAY,GAAGA,CAAA,KAAM;IACzBC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE9B,UAAU,CAAC;EAChD,CAAC;;EAED;EACA,MAAM+B,qBAAqB,GAAIC,IAAI,IAAK;IACtC,MAAMC,KAAK,GAAGD,IAAI,CAACnB,WAAW,CAAC,CAAC,CAACqB,OAAO,CAAClC,UAAU,CAACa,WAAW,CAAC,CAAC,CAAC;IAClE,IAAIoB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,OAAOD,IAAI;IACb;IAEA,MAAMG,MAAM,GAAGH,IAAI,CAACI,SAAS,CAAC,CAAC,EAAEH,KAAK,CAAC;IACvC,MAAMI,KAAK,GAAGL,IAAI,CAACI,SAAS,CAACH,KAAK,EAAEA,KAAK,GAAGjC,UAAU,CAACqB,MAAM,CAAC;IAC9D,MAAMiB,KAAK,GAAGN,IAAI,CAACI,SAAS,CAACH,KAAK,GAAGjC,UAAU,CAACqB,MAAM,CAAC;IAEvD,oBACE5B,OAAA,CAAAE,SAAA;MAAA4C,QAAA,GACGJ,MAAM,eACP1C,OAAA;QAAQ+C,SAAS,EAAEnD,MAAM,CAACoD,SAAU;QAAAF,QAAA,EAAEF;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EACpDP,KAAK;IAAA,eACN,CAAC;EAEP,CAAC;EAEDnD,SAAS,CAAC,MAAM;IACd,MAAM2D,UAAU,GAAG,wCAAwC;IAC3D,MAAMC,MAAM,GAAG;MACbC,GAAG,EAAE,IAAI;MACTC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE;IACb,CAAC;IACD/D,KAAK,CACFgE,GAAG,CAACT,UAAU,CAAC,CACfU,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,aAAa,GAAGD,QAAQ,CAACE,IAAI,CAACD,aAAa;MACjD,MAAME,MAAM,GAAI,mDAAkDF,aAAc,EAAC;MACjFG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBrE,KAAK,CACFgE,GAAG,CAACK,MAAM,EAAE;QAAEb;MAAO,CAAC,CAAC,CACvBS,IAAI,CAAEO,cAAc,IAAK;QACxB,MAAMC,UAAU,GAAGD,cAAc,CAACJ,IAAI,CAACM,OAAO,CAACC,GAAG,CAC/CC,IAAI,IAAKA,IAAI,CAACC,IACjB,CAAC;QACD/D,UAAU,CAAC2D,UAAU,CAAC;MACxB,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;QAChBT,OAAO,CAACS,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAK;MAChBT,OAAO,CAACS,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7E,OAAA;IAAK+C,SAAS,EAAEnD,MAAM,CAACkF,QAAS;IAAAhC,QAAA,gBAC9B9C,OAAA;MAAK+C,SAAS,EAAEnD,MAAM,CAACmF,SAAU;MAAAjC,QAAA,gBAC/B9C,OAAA;QACEgF,IAAI,EAAC,MAAM;QACXC,GAAG,EAAE3E,QAAS;QACdS,KAAK,EAAER,UAAW;QAClB2E,QAAQ,EAAErE,YAAa;QACvBsE,MAAM,EAAE1D,UAAW;QACnB2D,OAAO,EAAEA,CAAA,KAAM1E,kBAAkB,CAACD,eAAe,CAACmB,MAAM,GAAG,CAAC,CAAE;QAC9DyD,SAAS,EAAErD,aAAc;QACzBsD,WAAW,EAAC;MAAoB;QAAArC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,eACFpD,OAAA;QACE+C,SAAS,EAAEnD,MAAM,CAAC2F,UAAW;QAC7BC,OAAO,EAAEA,CAAA,KAAM;UACb7D,iBAAiB,CAAC,CAAC;UACnBQ,YAAY,CAAC,CAAC;QAChB,CAAE;QAAAW,QAAA,eAEF9C,OAAA;UAAKyF,GAAG,EAAE9F,MAAO;UAACoD,SAAS,EAAEnD,MAAM,CAAC8F,UAAW;UAACC,GAAG,EAAC;QAAY;UAAA1C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACL3C,eAAe,CAACmB,MAAM,GAAG,CAAC,iBACzB5B,OAAA;MAAI+C,SAAS,EAAEnD,MAAM,CAACgG,WAAY;MAAA9C,QAAA,EAC/BrC,eAAe,CAACgE,GAAG,CAAEtD,MAAM,iBAC1BnB,OAAA;QAEEwF,OAAO,EAAEA,CAAA,KAAMlE,kBAAkB,CAACH,MAAM,CAAE;QAC1C4B,SAAS,EAAEnD,MAAM,CAACiG,YAAa;QAAA/C,QAAA,EAE9BR,qBAAqB,CAACnB,MAAM;MAAC,GAJzBA,MAAM;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChD,EAAA,CAhJID,YAAY;EAAA,QACDN,WAAW;AAAA;AAAAiG,EAAA,GADtB3F,YAAY;AAkJlB,eAAeA,YAAY;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}