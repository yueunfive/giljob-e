[{"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/index.js":"1","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/App.js":"2","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/DetailPage.jsx":"3","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Welcome.jsx":"4","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Home.jsx":"5","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Onboarding.jsx":"6","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/SearchResults.jsx":"7","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/ScrollToTop.jsx":"8","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/Footer.jsx":"9","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/ModalContent.jsx":"10","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/AutoComplete.jsx":"11","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/Dropdown.jsx":"12"},{"size":669,"mtime":1692284246790,"results":"13","hashOfConfig":"14"},{"size":859,"mtime":1692342003504,"results":"15","hashOfConfig":"14"},{"size":4429,"mtime":1692187041000,"results":"16","hashOfConfig":"14"},{"size":925,"mtime":1692187041000,"results":"17","hashOfConfig":"14"},{"size":6335,"mtime":1692348354987,"results":"18","hashOfConfig":"14"},{"size":8034,"mtime":1692348353603,"results":"19","hashOfConfig":"14"},{"size":5868,"mtime":1692345132023,"results":"20","hashOfConfig":"14"},{"size":306,"mtime":1692187041000,"results":"21","hashOfConfig":"14"},{"size":663,"mtime":1692187041000,"results":"22","hashOfConfig":"14"},{"size":7831,"mtime":1692326497094,"results":"23","hashOfConfig":"14"},{"size":4708,"mtime":1692187041000,"results":"24","hashOfConfig":"14"},{"size":2656,"mtime":1692289910307,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"gq00y1",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/index.js",[],[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/App.js",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/DetailPage.jsx",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Welcome.jsx",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Home.jsx",["64"],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/pages/Onboarding.jsx",["65","66"],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/SearchResults.jsx",["67","68","69","70"],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/ScrollToTop.jsx",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/Footer.jsx",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/ModalContent.jsx",["71","72"],[],"import Modal from \"react-modal\";\nimport Dropdown from \"./Dropdown\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport filter from \"../img/filter.png\";\nimport cancel from \"../img/cancel.png\";\nimport styles from \"./ModalContent.module.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ModalContent = ({ openModal, closeModal, getData }) => {\n  let navigate = useNavigate();\n\n  // input을 감싸는 div를 클릭했을 때 input으로 포커스 이동하게 하는 기능\n  const inputRef = useRef(null); // 입력란에 대한 ref 생성\n  const handleDivClick = () => {\n    inputRef.current.focus(); // 입력란에 포커스 이동\n  };\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const handleModalOpen = () => {\n    setModalIsOpen(true);\n  };\n\n  const regionOptions = [\n    \"전체\",\n    \"서울\",\n    \"경기\",\n    \"부산\",\n    \"대구\",\n    \"인천\",\n    \"광주\",\n    \"대전\",\n    \"울산\",\n    \"강원\",\n    \"충북\",\n    \"충남\",\n    \"전북\",\n    \"전남\",\n    \"경북\",\n    \"경남\",\n    \"세종\",\n    \"제주\",\n  ];\n  const educationOptions = [\n    \"고등학교 졸업 미만\",\n    \"고등학교 졸업\",\n    \"대학교 재학\",\n    \"대학교 졸업\",\n    \"석사/박사\",\n    \"무관\",\n  ];\n  const jobStatusOptions = [\n    \"전체\",\n    \"취업 준비생\",\n    \"(예비)창업자\",\n    \"재직자\",\n    \"자영업자\",\n    \"프리랜서\",\n    \"단기 근로자\",\n  ];\n\n  const [age, setAge] = useState(null);\n  const [selectedRegion, setSelectedRegion] = useState(regionOptions[0]);\n  const [selectedEducation, setSelectedEducation] = useState(\n    educationOptions[0]\n  );\n  const [selectedJobStatus, setSelectedJobStatus] = useState(\n    jobStatusOptions[0]\n  );\n\n  // 로컬 스토리지에서 사용자 정보를 가져옴\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n  useEffect(() => {\n    if (userInfo) {\n      // Modal이 열릴 때마다 저장된 사용자 정보를 가져와서 미리 설정\n      setSelectedRegion(userInfo.region || regionOptions[0]);\n      setSelectedEducation(userInfo.education || educationOptions[0]);\n      setSelectedJobStatus(userInfo.jobStatus || jobStatusOptions[0]);\n      setAge(userInfo.age);\n    }\n  }, []);\n\n  //  Onboarding 컴포넌트에서 선택한 정보를 userData 상태로 저장(userData의 초기 값을 localStorage 정보로 교체!)\n  const [userData, setUserData] = useState({\n    region: userInfo.region,\n    education: userInfo.education,\n    jobStatus: userInfo.jobStatus,\n    age: age,\n  });\n\n  // 버튼 클릭 : localStorage에 사용자 정보 저장 후 '홈' 페이지로 이동\n  const goToHome = async () => {\n    // age 값을 userData에 저장\n    const updatedUserData = {\n      ...userData,\n      age: age,\n    };\n\n    // userData를 업데이트한 후 localStorage에 저장\n    localStorage.setItem(\"userInfo\", JSON.stringify(updatedUserData));\n\n    try {\n      getData();\n      navigate(\"/Home\"); //통신 성공하면 Home으로 이동\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <button\n        className={styles.filterbutton}\n        onClick={() => {\n          handleModalOpen();\n          openModal();\n        }}\n      >\n        <img src={filter} className={styles.filtericon} alt=\"filtericon\"></img>\n      </button>\n      <Modal\n        className={styles.modal}\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n      >\n        <div className={styles.modalbody}>\n          <div className={styles.header}>\n            <div className={styles.headerleft}>\n              <img src={filter} className={styles.headericon}></img>\n              <span>필터</span>\n            </div>\n            <div className={styles.headerright}>\n              <button\n                className={styles.filterx}\n                onClick={() => {\n                  setModalIsOpen(false);\n                  closeModal();\n                }}\n              >\n                <img src={cancel} alt=\"cancel\"></img>\n              </button>\n            </div>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.Onboarding_content}>\n              <div className={styles.Onboarding_line}>\n                <span className={styles.bold}>지역</span>\n                <Dropdown\n                  options={regionOptions}\n                  className={styles.Onboarding_dropdown}\n                  defaultOption=\"지역을 선택해주세요\"\n                  initialSelected={selectedRegion}\n                  onSelect={(option) => {\n                    setSelectedRegion(option);\n                    setUserData((prevUserData) => ({\n                      ...prevUserData,\n                      region: option,\n                    }));\n                  }} // 옵션 선택 시 선택한 옵션을 상태로 업데이트\n                />\n              </div>\n              <div className={styles.Onboarding_line}>\n                <span className={styles.bold}>학력</span>\n                <Dropdown\n                  options={educationOptions}\n                  className={styles.Onboarding_dropdown}\n                  defaultOption=\"학력을 선택해주세요\"\n                  initialSelected={selectedEducation}\n                  onSelect={(option) => {\n                    setSelectedEducation(option);\n                    setUserData((prevUserData) => ({\n                      ...prevUserData,\n                      education: option,\n                    }));\n                  }}\n                />\n              </div>\n              <div className={styles.Onboarding_line}>\n                <span className={styles.bold}>구직 상태</span>\n                <Dropdown\n                  options={jobStatusOptions}\n                  className={styles.Onboarding_dropdown}\n                  defaultOption=\"구직 상태를 선택해주세요\"\n                  initialSelected={selectedJobStatus}\n                  onSelect={(option) => {\n                    setSelectedJobStatus(option);\n                    setUserData((prevUserData) => ({\n                      ...prevUserData,\n                      jobStatus: option,\n                    }));\n                  }}\n                />\n              </div>\n              <div\n                className={`${styles.Onboarding_line} ${styles.age_container}`}\n              >\n                <span className={styles.bold}>연령</span>\n                <div className={styles.age_text} onClick={handleDivClick}>\n                  <span>만</span>\n                  <input\n                    ref={inputRef}\n                    value={age === null ? \"\" : age} // null일 경우 빈 문자열로 표시\n                    onChange={(e) => {\n                      const value = e.target.value; // 입력 값\n                      if (/^\\d*$/.test(value)) {\n                        // 정규식으로 숫자인지 검사\n                        setAge(value);\n                      }\n                    }}\n                  />\n                </div>\n                <span className={styles.agefinish}>세</span>\n              </div>\n            </div>\n          </div>\n          <div className={styles.wrapper_bottom}>\n            {/* 어차피 필터는 온보딩 등록된 후 -> 나이를 지우는 경우만 생각해서 비활성화 기능 만들었음 */}\n            <button\n              className={`${styles.Onboarding_btn} ${\n                !age ? styles.disabled : \"\"\n              }`}\n              disabled={!age}\n              onClick={() => {\n                setModalIsOpen(false);\n                closeModal();\n                goToHome();\n              }}\n            >\n              선택 완료\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ModalContent;\n","/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/AutoComplete.jsx",[],[],"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/src/component/Dropdown.jsx",[],[],{"ruleId":"73","severity":1,"message":"74","line":136,"column":22,"nodeType":"75","endLine":136,"endColumn":24,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":162,"column":22,"nodeType":"75","endLine":162,"endColumn":24,"suggestions":"81"},{"ruleId":"77","severity":1,"message":"82","line":23,"column":10,"nodeType":"79","messageId":"80","endLine":23,"endColumn":22},{"ruleId":"77","severity":1,"message":"83","line":23,"column":24,"nodeType":"79","messageId":"80","endLine":23,"endColumn":39},{"ruleId":"73","severity":1,"message":"84","line":73,"column":6,"nodeType":"75","endLine":73,"endColumn":47,"suggestions":"85"},{"ruleId":"73","severity":1,"message":"86","line":106,"column":6,"nodeType":"75","endLine":106,"endColumn":8,"suggestions":"87"},{"ruleId":"73","severity":1,"message":"88","line":82,"column":6,"nodeType":"75","endLine":82,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":130,"column":15,"nodeType":"92","endLine":130,"endColumn":63},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchPolicies' and 'translationMap'. Either include them or remove the dependency array.","ArrayExpression",["93"],"no-unused-vars","'policyData' is assigned a value but never used.","Identifier","unusedVar",["94"],"'visitedPages' is assigned a value but never used.","'setVisitedPages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPolicies'. Either include it or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'lastPageVisited'. Either include it or remove the dependency array.",["96"],"React Hook useEffect has missing dependencies: 'educationOptions', 'jobStatusOptions', 'regionOptions', and 'userInfo'. Either include them or remove the dependency array.",["97"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchPolicies, translationMap]",{"range":"107","text":"108"},{"range":"109","text":"108"},"Update the dependencies array to be: [searchText, lastPageVisited, activePage, fetchPolicies]",{"range":"110","text":"111"},"Update the dependencies array to be: [lastPageVisited]",{"range":"112","text":"113"},"Update the dependencies array to be: [educationOptions, jobStatusOptions, regionOptions, userInfo]",{"range":"114","text":"115"},[3680,3682],"[fetchPolicies, translationMap]",[3802,3804],[2128,2169],"[searchText, lastPageVisited, activePage, fetchPolicies]",[3165,3167],"[lastPageVisited]",[1882,1884],"[educationOptions, jobStatusOptions, regionOptions, userInfo]"]