{"ast":null,"code":"var _jsxFileName = \"/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/\\u1100\\u1175\\u11AFJOB\\u110B\\u1175/src/component/SearchResults.jsx\",\n  _s = $RefreshSig$();\nimport styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchResults() {\n  _s();\n  const [cards, setCards] = useState([]);\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n\n  // 임시로 배열 & 검색결과로 만들어 봄\n  const card = [\"청년전용창업자금(창업기반지원자금)\", \"청년내일저축계좌\", \"청년 자기개발 도서구입비 지원\", \"예비창업패키지\", \"청년키움식당\", \"(창업성공패키지 지원사업)청년창업사관학교\", \"아유.. 하기 싫어..\", \"아니.. 미대생이에요? \", \"이건 사람 불러요!\", \"예... 하고는 있는데\", \"전문가한테 맡기면 편할 텐데...\", \"자.. 이게 클릭이야..\"];\n  const [search, setSearch] = useState(\"창업\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchResults,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.search_text,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"'\", search, \"'\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), \" \\uAC80\\uC0C9 \\uACB0\\uACFC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.card_box,\n      children: card.map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.card,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.card_text,\n          children: a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, a, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchResults, \"7l8Tz8Q/Ac6Z9Qu0zjjZ7go9hQw=\");\n_c = SearchResults;\nexport default SearchResults;\nvar _c;\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"names":["styles","React","useState","jsxDEV","_jsxDEV","SearchResults","_s","cards","setCards","card","search","setSearch","className","children","search_text","fileName","_jsxFileName","lineNumber","columnNumber","card_box","map","a","card_text","_c","$RefreshReg$"],"sources":["/Users/yueun-oh/Desktop/yueunfive-git/likelion-hackathon/길JOB이/src/component/SearchResults.jsx"],"sourcesContent":["import styles from \"./SearchResults.module.css\";\nimport React, { useState } from \"react\";\n\nfunction SearchResults() {\n  const [cards, setCards] = useState([]);\n  // 아마도.. 데이터 받아와서 cards 배열에 넣고 map으로 card 띄우는 고런 느낌으로 구현하면 될 듯..?\n\n  // 임시로 배열 & 검색결과로 만들어 봄\n  const card = [\n    \"청년전용창업자금(창업기반지원자금)\",\n    \"청년내일저축계좌\",\n    \"청년 자기개발 도서구입비 지원\",\n    \"예비창업패키지\",\n    \"청년키움식당\",\n    \"(창업성공패키지 지원사업)청년창업사관학교\",\n    \"아유.. 하기 싫어..\",\n    \"아니.. 미대생이에요? \",\n    \"이건 사람 불러요!\",\n    \"예... 하고는 있는데\",\n    \"전문가한테 맡기면 편할 텐데...\",\n    \"자.. 이게 클릭이야..\",\n  ];\n  const [search, setSearch] = useState(\"창업\");\n\n  return (\n    <div className={styles.SearchResults}>\n      <div className={styles.search_text}>\n        <h1>\n          <span>'{search}'</span> 검색 결과\n        </h1>\n      </div>\n      <div className={styles.card_box}>\n        {card.map((a) => (\n          <div key={a} className={styles.card}>\n            <div className={styles.card_text}>{a}</div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC;;EAEA;EACA,MAAMO,IAAI,GAAG,CACX,oBAAoB,EACpB,UAAU,EACV,kBAAkB,EAClB,SAAS,EACT,QAAQ,EACR,wBAAwB,EACxB,cAAc,EACd,eAAe,EACf,YAAY,EACZ,cAAc,EACd,oBAAoB,EACpB,eAAe,CAChB;EACD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBACEE,OAAA;IAAKQ,SAAS,EAAEZ,MAAM,CAACK,aAAc;IAAAQ,QAAA,gBACnCT,OAAA;MAAKQ,SAAS,EAAEZ,MAAM,CAACc,WAAY;MAAAD,QAAA,eACjCT,OAAA;QAAAS,QAAA,gBACET,OAAA;UAAAS,QAAA,GAAM,GAAC,EAACH,MAAM,EAAC,GAAC;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,8BACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAEZ,MAAM,CAACmB,QAAS;MAAAN,QAAA,EAC7BJ,IAAI,CAACW,GAAG,CAAEC,CAAC,iBACVjB,OAAA;QAAaQ,SAAS,EAAEZ,MAAM,CAACS,IAAK;QAAAI,QAAA,eAClCT,OAAA;UAAKQ,SAAS,EAAEZ,MAAM,CAACsB,SAAU;UAAAT,QAAA,EAAEQ;QAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC,GADnCG,CAAC;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CArCQD,aAAa;AAAAkB,EAAA,GAAblB,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}